import Head from 'next/head';
import { getSession } from 'next-auth/react';
import { Box, Button, Container, Flex, Heading, Image, Text, useColorModeValue } from '@chakra-ui/react';
import Posts from '../components/Posts';
import { useRouter } from 'next/router';

export default function Home() {
  const color = useColorModeValue('black', 'white');
  const navigate = useRouter();

  return (
    <>
      <Head>
        <title>Home | All Articles</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box width="100%" height="90vh">
        <Container maxW="1000px" padding={1} position="relative" mt={3}>
          <Flex
            alignItems="center"
            justifyContent="space-between"
            position="relative"
            width="100%"
            flexDirection={['column-reverse', 'column-reverse', 'row', 'row']}
            gap="3"
          >
            <Box flex="1">
              <Heading
                fontWeight="bold"
                color={color}
                fontSize={['3xl', '3xl', '5xl', '5xl']}
                textAlign={['center', 'center', 'left', 'left']}
              >
                Sharing Knowledge Experience and Fun with others
              </Heading>

              <Box
                marginTop={4}
                display="flex"
                alignItems="center"
                pos="relative"
                justifyContent={['center', 'center', 'normal', 'normal']}
              >
                <Button size={['md', 'md', 'lg', 'lg']} boxShadow="md" onClick={() => navigate.push('/post')}>
                  <Text>Let&apos;s share!</Text>
                </Button>
              </Box>
            </Box>

            <Box display="flex" justifyContent="center" alignItems="center">
              <Image src="/background.jpeg" width="100%" height="450px" borderRadius="8px" boxShadow="lg" />
            </Box>
          </Flex>
        </Container>

        <Container maxW="1000px" padding={1}>
          <Posts />
        </Container>
      </Box>
    </>
  );
}

export async function getServerSideProps({ req }) {
  const session = await getSession({ req });
  if (!session) {
    return {
      redirect: {
        destination: '/auth',
        permanent: false,
      },
    };
  }
  return {
    props: { session },
  };
}
